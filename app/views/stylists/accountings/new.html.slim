- content_for :title, '会計処理'
- content_for :meta_description, 'お客様の会計処理を行います。金額の変更、支払方法の選択、複数支払方法での分割払いに対応しています。'

.container.mx-auto.p-4.max-w-lg
  h1.text-xl.md:text-2xl.lg:text-3xl.font-bold.mb-4 会計処理

  - if @accounting.errors.any?
    .alert.alert-error.mb-4
      ul
        - @accounting.errors.full_messages.each do |message|
          li= message

  .border.border-gray-300.rounded-lg.bg-white.shadow-sm.overflow-hidden.mb-4
    table.w-full.responsive-table
      tbody
        tr
          th.md:w-1/3 来店日時
          td= I18n.l(@reservation.start_at, format: :wday_short)
        tr
          th.md:w-1/3 お客様の名前
          td
            - if @reservation.customer.present?
              = @reservation.customer.family_name
              |
              = @reservation.customer.given_name
              |  様
            - else
              | (情報なし)
        tr
          th.md:w-1/3 メニュー
          td
            - if @reservation.menus.any?
              ul.space-y-1.list-none.p-0.m-0
                - @reservation.menus.each do |menu|
                  li
                    = menu.name
                    span.ml-2.text-gray-600= "¥#{menu.price}"
            - else
              | なし

  = form_with model: @accounting, url: stylists_accountings_path(reservation_id: @reservation.id), local: true, class: "space-y-4", data: { controller: "accounting", accounting_products: @products.to_json, accounting_menu_total_value: @accounting.total_amount } do |form|
    .border.border-gray-300.rounded-lg.bg-white.shadow-sm.overflow-hidden
      .bg-gray-100.p-3.border-b.border-gray-300
        h2.text-lg.font-semibold.mb-0 店販商品
      .p-3
        p.text-sm.text-gray-600.mb-3 店販商品を購入された場合は追加してください。
        #product-items.space-y-3 data-accounting-target="productItems"
          / 初期状態では商品フィールドを表示しない
        .text-center.mt-3
          button.text-blue-600.text-sm.hover:text-blue-800 type="button" data-action="click->accounting#addProduct" + 商品を追加

    .border.border-gray-300.rounded-lg.bg-white.shadow-sm.overflow-hidden
      .bg-gray-100.p-3.border-b.border-gray-300
        h2.text-lg.font-semibold.mb-0 会計金額
      .p-4
        p.text-sm.text-gray-600.mb-3 必要に応じて金額を変更できます。

        .relative
          span.absolute.left-3.top-1/2.transform.-translate-y-1/2.text-gray-500 ¥
          = form.number_field :total_amount,
              class: "border border-gray-300 rounded px-3 py-2 pl-8 w-full min-h-[44px]",
              min: 0,
              step: 1,
              required: true,
              data: { accounting_target: "totalAmount" }

    .border.border-gray-300.rounded-lg.bg-white.shadow-sm.overflow-hidden
      .bg-gray-100.p-3.border-b.border-gray-300
        h2.text-lg.font-semibold.mb-0 支払方法

      #payment-methods.space-y-3 data-accounting-target="paymentMethods"
        = form.fields_for :accounting_payments do |payment_form|
          .payment-method.p-3.border.border-gray-200.rounded-lg data-payment-index="0"
            .grid.grid-cols-1.md:grid-cols-2.gap-3
              .form-group
                = payment_form.label :payment_method, "支払方法", class: "block text-sm font-medium text-gray-700 mb-1"
                = payment_form.select :payment_method, options_for_select([['現金', 'cash'], ['クレジットカード', 'credit_card'], ['QR決済', 'digital_pay'], ['その他', 'other']]), { prompt: '支払方法を選択' }, { class: "border border-gray-300 rounded px-3 py-2 w-full min-h-[44px]", required: true, title: "お客様の支払方法を選択してください" }
              .form-group
                = payment_form.label :amount, "支払金額", class: "block text-sm font-medium text-gray-700 mb-1"
                .relative
                  span.absolute.left-3.top-1/2.transform.-translate-y-1/2.text-gray-500 ¥
                  = payment_form.number_field :amount,
                      class: "border border-gray-300 rounded px-3 py-2 pl-8 w-full min-h-[44px]",
                      min: 0,
                      step: 1,
                      value: @accounting.total_amount,
                      required: true
            .text-right.mt-2
              button.text-red-600.text-sm.hover:text-red-800 type="button" data-action="click->accounting#removePaymentMethod" この支払方法を削除

        .text-center.mt-3
          button.text-blue-600.text-sm.hover:text-blue-800 type="button" data-action="click->accounting#addPaymentMethod" + 支払方法を追加

    .flex.flex-col.md:flex-row.justify-center.items-center.space-y-4.md:space-y-0.md:space-x-4.mt-6
      = form.submit "会計完了", class: "btn-primary w-full md:w-auto"
      = link_to "戻る", stylists_reservation_path(@reservation), class: "btn-gray w-full md:w-auto text-center"

