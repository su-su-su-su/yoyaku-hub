name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: yarn audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      YOYAKU_HUB_DATABASE_HOST: localhost
      APP_DATABASE_USER: postgres
      YOYAKU_HUB_DATABASE_PASSWORD: postgres
      RAILS_ENV: test

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install JavaScript dependencies
        run: yarn install

      - name: Create assets initializer
        run: |
          mkdir -p config/initializers
          echo 'Rails.application.config.assets.css_compressor = nil if ENV["SKIP_SASS_COMPRESSION"] == "true"' > config/initializers/skip_sass_compression.rb

      - name: Precompile assets with compression disabled
        run: |
          SKIP_SASS_COMPRESSION=true bin/rails assets:precompile

      - name: Prepare database
        run: |
          bin/rails db:create
          bin/rails db:migrate

      - name: Run RSpec tests
        run: |
          bundle binstubs rspec-core
          bin/rspec
